\{{#with_members "app=lair"}}
upstream lair_cluster {
  \{{#each members}}
  server \{{ address }}:3000;
  \{{/each}}
}
\{{/with_members}}

server {
  listen 80;
  server_name {{ LAIR_NGINX_SERVER_NAME }};
  return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  server_name {{ LAIR_NGINX_SERVER_NAME }};

  ssl_certificate {{ LAIR_NGINX_SSL_CERTIFICATE }};
  ssl_certificate_key {{ LAIR_NGINX_SSL_CERTIFICATE_KEY }};

  root /var/www/lair;
  index index.html;

  location ~* \.(?:ico|css|eot|js|gif|jpe?g|png|svg|ttf|woff2?)$ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location ~* ^\/(?:api|auth) {
    \{{#with_members "app=lair"}}
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://lair_cluster;
    break;
    \{{else}}
    return 502;
    \{{/with_members}}
  }

  location / {

    set $maintenance 0;

    # Set maintenance mode if maintenance directory exists...
    if (-d $document_root/maintenance) {
      set $maintenance 1;
    }

    # but serve everything under the public maintenance directory.
    if ($uri ~ ^/maintenance/) {
      set $maintenance 0;
    }

    # If maintenance mode is set, serve the maintenance page.
    if ($maintenance) {
      rewrite (.*) /maintenance/maintenance.html last;
    }

    try_files $uri $uri/index.html $uri.html /index.html;
  }
}
