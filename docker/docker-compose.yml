version: "3.1"

networks:
  default:
    external:
      name: "{{ LAIR_DEPLOY_NETWORK }}"

services:

  # Application in production mode.
  # The application will not serve assets.
  app:
    image: alphahydrae/lair-app
    build: /var/lib/lair/checkout/docker/app
    env_file:
      - .env
    environment:
      SERF_JOIN: "{{ LAIR_DEPLOY_SERF }}"
    depends_on:
      - cache
      - db
    restart: always

  # Background job processing task.
  job:
    image: alphahydrae/lair-job
    build: /var/lib/lair/checkout/docker/job
    env_file:
      - .env
    depends_on:
      - db
      - cache
    restart: always

  # PostgreSQL database.
  db:
    image: alphahydrae/lair-db
    build: /var/lib/lair/checkout/docker/db
    container_name: lair_db
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD:
      LAIR_DATABASE_NAME:
      LAIR_DATABASE_USERNAME:
      LAIR_DATABASE_PASSWORD:
    restart: always

  # Redis in-memory database.
  cache:
    image: redis:3.2
    command: redis-server --appendonly yes
    container_name: lair_cache
    volumes:
      - cache_data:/data
    restart: always

  # Rake task.
  # This is meant to be run as a one-off task (with "run" instead of "up").
  task:
    image: alphahydrae/lair-app
    entrypoint:
      - /init
      - rake
    command: -T
    env_file:
      - .env
    restart: "no"

  # Backup script.
  # This is meant to be run as a one-off task (with "run" instead of "up").
  backup:
    image: alphahydrae/lair-backup
    volumes:
      - "/var/lib/lair/backup:/var/lib/lair/backup"
    env_file:
      - .env
    restart: "no"

volumes:
  cache_data:
  db_data:
